name: Build Workflow

on:
  workflow_call:

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Maven
        run: mvn clean package
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar

  build-appimage:
    name: Build AppImage for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Install libfuse2
        run: sudo apt-get update && sudo apt-get install -y libfuse2


      - name: Install AppImage Tool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Create AppDir Structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          mkdir -p AppDir/usr/share/applications

          # Create AppRun
          cat << 'EOT' > AppDir/AppRun
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          exec java -jar "${HERE}/usr/bin/WhisperCat.jar"
          EOT
          chmod +x AppDir/AppRun

          # Copy JAR file
          cp target/Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar AppDir/usr/bin/WhisperCat.jar

          # Copy Icon
          cp whispercat.png AppDir/whispercat.png

          # Create .desktop file
          cat <<EOT > AppDir/WhisperCat.desktop
          [Desktop Entry]
          Type=Application
          Name=WhisperCat
          Exec=AppRun
          Icon=whispercat
          Comment=Ein Java-basierter Audio-Recorder
          Categories=Utility;AudioVideo;Audio;Recorder;
          EOT

      - name: Build AppImage
        run: |
          export ARCH=x86_64
          ./appimagetool-x86_64.AppImage AppDir WhisperCat.AppImage

      - name: Upload AppImage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WhisperCat.AppImage
          path: WhisperCat.AppImage

  build-deb:
    name: Build and Package for Linux (.deb) without bundling JRE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Install dpkg-dev
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: Create DEB Package Structure
        run: |
          package_name="WhisperCat"
          app_version="1.4.0"
          mkdir -p deb_package/DEBIAN
          mkdir -p deb_package/usr/bin
          mkdir -p deb_package/usr/share/$package_name

      - name: Create Control File
        run: |
          package_name="WhisperCat"
          app_version="1.4.0"
          echo "Package: $package_name
          Priority: optional
          Section: utils
          Installed-Size: $(du -ks deb_package/usr/share/$package_name | cut -f1)
          Maintainer: -
          Architecture: amd64
          Version: $app_version
          Depends: default-jre | java11-runtime
          Description: WhisperCat converts speech to text via whisper API." > deb_package/DEBIAN/control

      - name: Copy JAR File
        run: |
          package_name="WhisperCat"
          cp target/Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar deb_package/usr/share/$package_name/

      - name: Copy Icon
        run: |
          mkdir -p deb_package/usr/share/icons/hicolor/256x256/apps
          cp whispercat.png deb_package/usr/share/icons/hicolor/256x256/apps/whispercat.png

      - name: Create .desktop File
        run: |
          mkdir -p deb_package/usr/share/applications
          echo '[Desktop Entry]
          Version=1.4.0
          Type=Application
          Name=WhisperCat
          Comment=Java based audio recorder
          Exec=WhisperCat
          Icon=whispercat
          Terminal=false
          Categories=Utility;AudioVideo;Audio;Recorder;' > deb_package/usr/share/applications/whisperCat.desktop

      - name: Set Permissions for Desktop Files
        run: |
          chmod 644 deb_package/usr/share/applications/whisperCat.desktop
          chmod 644 deb_package/usr/share/icons/hicolor/256x256/apps/whispercat.png

      - name: Create Executable Script
        run: |
          package_name="WhisperCat"
          echo '#!/bin/bash
          java -jar /usr/share/'"$package_name"'/Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar "$@"' > deb_package/usr/bin/$package_name
          chmod +x deb_package/usr/bin/$package_name

      - name: Set Permissions
        run: chmod -R go-w deb_package

      - name: Build DEB Package
        run: dpkg-deb --build deb_package whispercat.deb

      - name: Upload .deb Artifact
        uses: actions/upload-artifact@v4
        with:
          name: whispercat.deb
          path: whispercat.deb

  build-windows:
    name: Build and Package for Windows using jpackage
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Version for Build
        run: java -version

      - name: Build with Maven
        run: mvn clean package

      - name: Uninstall Previous Version if Exists
        shell: powershell
        run: |
          Write-Output "Checking for previous installation of WhisperCat..."
          # Suche in der Registry nach einem Eintrag, der den DisplayName "WhisperCat" hat.
          $apps = Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" -ErrorAction SilentlyContinue | Where-Object { $_.DisplayName -eq "WhisperCat" }
          if ($apps) {
            foreach ($app in $apps) {
              $uninstallString = $app.UninstallString
              if ($uninstallString) {
                Write-Output "Found uninstall command: $uninstallString"
                # Viele MSI-Deinstallationsbefehle benötigen den /qn-Parameter für eine stille Deinstallation.
                # Falls der uninstall-String Anführungszeichen enthält, können diese entfernt oder beibehalten werden.
                Write-Output "Running uninstall command..."
                Start-Process -FilePath "cmd.exe" -ArgumentList "/c", "$uninstallString /qn" -Wait
              }
              else {
                Write-Output "No uninstall command found for product: $($app.DisplayName)"
              }
            }
          }
          else {
            Write-Output "No previous installation found."
          }

      - name: Create Application Image with jpackage
        shell: powershell
        run: |
          # Parameter für jpackage definieren
          $appVersion = '1.4.0' 
          $packageName = 'WhisperCat'
          $mainJar = 'target\Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar'
          $mainClass = 'org.whispercat.AudioRecorderUI'
          $iconPath = 'whispercat.ico'
          $outputDir = 'jpackage_output'
          $vendor = 'WhisperCat'

          # Erstelle das Output-Verzeichnis, falls es noch nicht existiert
          if (-Not (Test-Path -Path $outputDir)) {
            New-Item -ItemType Directory -Path $outputDir | Out-Null
          }

          # Führe jpackage aus
          & "${env:JAVA_HOME}\bin\jpackage.exe" `
            --type exe `
            --input target `
            --name $packageName `
            --main-jar $(Split-Path -Leaf $mainJar) `
            --main-class $mainClass `
            --icon $iconPath `
            --app-version $appVersion `
            --vendor $vendor `
            --win-dir-chooser `
            --win-menu `
            --win-shortcut `
            --copyright "© $vendor" `
            --dest $outputDir

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WhisperCat-Installer
          path: jpackage_output\*

  build-windows-with-jre:
    name: Build and Package for Windows with JRE included
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Verify Java Version for Build
        run: java -version
      - name: Build with Maven
        run: mvn clean package
      - name: Download and Extract JRE
        run: |
          Invoke-WebRequest -Uri 'https://cdn.azul.com/zulu/bin/zulu17.44.15-ca-jre17.0.8-win_x64.zip' -OutFile jre.zip
          Expand-Archive -LiteralPath jre.zip -DestinationPath temp_jre
          $extractedFolder = Get-ChildItem -Path temp_jre | Where-Object { $_.PSIsContainer } | Select-Object -First 1
          if (-Not (Test-Path -Path jre)) {
              New-Item -ItemType Directory -Path jre
          }
          Move-Item -Path 'temp_jre\*' -Destination 'jre' -Force
          Remove-Item temp_jre -Force -Recurse
          Remove-Item jre.zip -Force
      - name: Download Launch4j
        run: |
          curl -L -o launch4j.zip 'https://sourceforge.net/projects/launch4j/files/launch4j-3/3.14/launch4j-3.14-win32.zip/download'
          Expand-Archive -LiteralPath launch4j.zip -DestinationPath .
      - name: Copy JAR file for Launch4j
        run: |
          New-Item -ItemType Directory -Force -Path launch4j\target
          Copy-Item -Path target\Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar -Destination launch4j\target\Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar
      - name: Move JRE into launch4j directory
        run: |
          Move-Item -Path jre -Destination launch4j\jre
      - name: Copy Icon File for Launch4j
        run: |
          Copy-Item -Path whispercat.ico -Destination launch4j\whispercat-icon.ico
      - name: Create Launch4j Config File
        run: |
          $jarPath = 'target\Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar'
          $outFile = 'WhisperCat-with-jre.exe'
          $iconPath = 'whispercat-icon.ico'
          $mainClass = 'org.whispercat.AudioRecorderUI'
          $javaPath = 'jre'
          Write-Host "Using bundled JRE at: $javaPath"
          $xmlContent = @"
          <launch4jConfig>
          <dontWrapJar>false</dontWrapJar>
          <headerType>gui</headerType>
          <jar>$jarPath</jar>
          <outfile>$outFile</outfile>
          <errTitle></errTitle>
          <cmdLine></cmdLine>
          <chdir>.</chdir>
          <priority>normal</priority>
          <stayAlive>false</stayAlive>
          <manifest></manifest>
          <icon>$iconPath</icon>
          <classPath>
          <mainClass>$mainClass</mainClass>
          </classPath>
          <jre>
          <path>$javaPath</path>
          <bundledJre64Bit>true</bundledJre64Bit>
          <minVersion>11.0.0</minVersion>
          <maxVersion></maxVersion>
          <jdkPreference>preferJre</jdkPreference>
          <runtimeBits>64</runtimeBits>
          </jre>
          </launch4jConfig>
          "@
          $xmlContent | Out-File -FilePath launch4j\launch4j-config-with-jre.xml -Encoding UTF8
      - name: Run Launch4j via Java
        run: |
          java -jar launch4j/launch4j.jar launch4j\launch4j-config-with-jre.xml
      - name: Prepare Distribution Package
        run: |
          New-Item -ItemType Directory -Force -Path dist
          Copy-Item -Path launch4j\WhisperCat-with-jre.exe -Destination dist\
          Copy-Item -Path launch4j\jre -Destination dist\jre -Recurse
      - name: Copy JRE contents to dist\jre
        run: |
          $jrePath = 'dist\jre'
          $zuluDir = Get-ChildItem -Path $jrePath -Directory | Where-Object { $_.Name -like 'zulu*' } | Select-Object -First 1
          if ($zuluDir) {
              # Verschieben des gesamten Inhalts von dist\jre\zulu* nach dist\jre\
              Move-Item -Path "$($zuluDir.FullName)\*" -Destination $jrePath -Force
              Remove-Item -Path $zuluDir.FullName -Recurse -Force
              Write-Host "Inhalte aus $($zuluDir.Name) wurden nach $jrePath verschoben."
          } else {
              Write-Host "Kein zulu*-Verzeichnis in $jrePath gefunden."
          }
      - name: List Directory Contents
        run: |
          Write-Host "Current Directory:"
          Get-ChildItem -Path dist\jre
      - name: Upload ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WhisperCat-with-jre-non-installer.zip
          path: dist\*

  build-macos:
    name: Build macOS Installer (DMG)
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Create macOS App Bundle and DMG
        run: |
          jpackage \
            --type dmg \
            --name WhisperCat \
            --app-version 1.4.0 \
            --icon whispercat.icns \
            --input target \
            --main-jar Audiorecorder-1.0-SNAPSHOT-jar-with-dependencies.jar \
            --main-class org.whispercat.AudioRecorderUI

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WhisperCat.dmg
          path: WhisperCat-1.4.0.dmg